<?php

declare(strict_types=1);

namespace Chiron\View\Helper;

use Chiron\Support\Str;
use Exception;

//https://github.com/ishanvyas22/asset-mix/blob/master/src/Mix.php
//https://github.com/laravel/framework/blob/9.x/src/Illuminate/Foundation/Mix.php
//https://github.com/Diverently/laravel-mix-kirby/blob/91fe17d6634083cab9417c4e9477021554851aa7/index.php#L100

//https://github.com/symfony/asset/blob/6.1/VersionStrategy/JsonManifestVersionStrategy.php#L112

// TODO : utiliser un cache : https://github.com/symfony/webpack-encore-bundle/blob/b6f5e22dff98578e584f5d9f0a743d94af8b8597/src/Asset/EntrypointLookup.php#L39

/**
 * Paths retrieved from mix manifest file (generated by laravel mix).
 */
final class Mix
{
    /**
     * Mix manifests array
     *
     * @var array<string>
     */
    private static array $manifests = []; // TODO : déplacer cette variable dans la méthode invoke et virer la méthode 'reset' cela évitera d'avoir une variable de classe et le code sera plus propre !!!!

    /**
     * Get the path to a versioned Mix file.
     *
     * @param string $path              Path of the asset file.
     * @param string $manifestDirectory Custom manifest directory.
     *
     * @return string
     *
     * @throws Exception
     */
    // TODO : virer le paramétre $manifestDirectory !!!
    public function __invoke(string $path, string $manifestDirectory = ''): string
    {
        $urlDomain = '';

        // TODO : je pense que ce bout de code n'est pas nécessaire si on force le fullBase à false dans les "options" du AssetMixHelper lorsqu'on génére une premiére fois l'url. Attention il faut aussi virer l'option Timestamp sinon ca va merder dans le AssetMixHelper !!!!
        // remove the scheme and domain from the front of the path if it has one
        // https://regex101.com/r/FyT9T4/1
        if (preg_match('@^([a-z]+://[^/]+)(/.+)$@', $path, $matches)) {
            $urlDomain = $matches[1];
            $path = $matches[2];
        }

        if (! str_starts_with($path, '/')) {
            $path = "/{$path}";
        }

        if ($manifestDirectory && ! str_starts_with($manifestDirectory, '/')) {
            $manifestDirectory = "/{$manifestDirectory}";
        }

        //https://github.com/Diverently/laravel-mix-kirby/blob/91fe17d6634083cab9417c4e9477021554851aa7/index.php#L100
        if (is_file(directory('@public') . $manifestDirectory . '/hot')) {
            $url = rtrim(file_get_contents(directory('@public') . $manifestDirectory . '/hot')); // utilité du rtim ????

            //if (starts_with($url, ['http://', 'https://'])) {
            if (str_starts_with($url, 'http://') || str_starts_with($url, 'https://')) {
                // TODO : pour enlever le 'http:' ou 'https:' on doit pouvoir faire un str_replace(['http:', 'https:'],'',$url); ou alors preg_replace("/^http(s)?:/i", '', $url) ou preg_replace("/^https?:/i", '', $url);
                return Str::after($url, ':') . $path;
            }

            return "//localhost:8080{$path}"; // TODO : dans quel cas cela se produit t'il ? cad qu'on n'ait pas une url valide dans le fichier "hot" ??? en regardant dans le code javascript du plugin on initialise par défault à 'http://' le début de l'url ou https si le booléen secure est activé. https://github.com/laravel-mix/laravel-mix/blob/08f17c49e9dc466786383b831823f988198f1cf2/src/HotReloading.js#L22
        }

        $manifestPath = directory('@public') . $manifestDirectory . '/mix-manifest.json';
        if (! isset(self::$manifests[$manifestPath])) {
            if (! is_file($manifestPath)) {
                throw new Exception("Mix manifest not found at: {$manifestPath}"); // TODO : transformer cela en une HelperException (cette classe fera un extends de la ViewException::class)
            }

            // TODO : faire un try/catch lors du decode !!!! https://github.com/symfony/asset/blob/6.1/VersionStrategy/JsonManifestVersionStrategy.php#L88
            // TODO : ou alors vérifier si le decode est null et dans ce cas lever une exception spécifique !!!! https://github.com/symfony/webpack-encore-bundle/blob/b6f5e22dff98578e584f5d9f0a743d94af8b8597/src/Asset/EntrypointLookup.php#L129
            self::$manifests[$manifestPath] = json_decode(file_get_contents($manifestPath), true);
        }

        $manifest = self::$manifests[$manifestPath];
        if (! isset($manifest[$path])) {
            // TODO : créer une exception AssetNotFoundException et améliorer le message de l'exception : https://github.com/symfony/asset/blob/6.1/VersionStrategy/JsonManifestVersionStrategy.php#L112
            //https://github.com/sourceboat/wp-laravel-mix/blob/develop/index.php#L70
            throw new Exception("Unable to locate Mix file: {$path}.");
        }

        return $urlDomain . $manifestDirectory . $manifest[$path];
    }

    /**
     * Reset manifests array
     *
     * @return void
     */
    // TODO : méthode à virer !!!
    public static function reset(): void
    {
        self::$manifests = [];
    }

/*
// https://github.com/symfony/asset/blob/6.1/VersionStrategy/JsonManifestVersionStrategy.php#L88
    try {
        $this->manifestData = json_decode(file_get_contents($this->manifestPath), true, flags: \JSON_THROW_ON_ERROR);
    } catch (\JsonException $e) {
        throw new RuntimeException(sprintf('Error parsing JSON from asset manifest file "%s": ', $this->manifestPath).$e->getMessage(), previous: $e);
    }
    */
}
